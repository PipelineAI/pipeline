{%- set task_port = 2222 -%}
{%- set admin_port = 6006 -%}

{%- set replicas = {"chief": 1, "master": 1, "worker": PIPELINE_WORKER_REPLICAS, "ps": PIPELINE_PS_REPLICAS, "evaluator": 1} -%}

{%- macro evaluator_hosts() -%}
  {%- for task_index in range(1) -%}
    {%- if not loop.first -%}\",\"{%- endif -%}
    {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}-evaluator-{{ task_index }}:{{ task_port }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro chief_hosts() -%}
  {%- for task_index in range(1) -%}
    {%- if not loop.first -%}\",\"{%- endif -%}
    {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}-chief-{{ task_index }}:{{ task_port }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro master_hosts() -%}
  {%- for task_index in range(1) -%}
    {%- if not loop.first -%}\",\"{%- endif -%}
    {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}-master-{{ task_index }}:{{ task_port }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro worker_hosts() -%}
  {%- for task_index in range(PIPELINE_WORKER_REPLICAS) -%}
    {%- if not loop.first -%}\",\"{%- endif -%}
    {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}-worker-{{ task_index }}:{{ task_port }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro ps_hosts() -%}
  {%- for task_index in range(PIPELINE_PS_REPLICAS) -%}
    {%- if not loop.first -%}\",\"{%- endif -%}
    {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}-ps-{{ task_index }}:{{ task_port }}
  {%- endfor -%}
{%- endmacro -%}

{%- for task_type in ["master", "worker", "ps"] -%}
{%- for task_index in range(replicas[task_type]) -%}
kind: Service
apiVersion: v1
metadata:
  name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}-{{ task_type }}-{{ task_index }}
  namespace: {{ PIPELINE_NAMESPACE }}
spec:
  selector:
    name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}
    task_type: {{ task_type }}
    task_index: "{{ task_index }}"
  ports:
  - name: grpc
    port: {{ task_port }}
  - name: http
    port: {{ admin_port }}
---
kind: ReplicaSet
apiVersion: extensions/v1beta1
metadata:
  name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}-{{ task_type }}-{{ task_index }}
  namespace: {{ PIPELINE_NAMESPACE }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE}}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}
        task_type: "{{ task_type }}"
        task_index: "{{ task_index }}"
    spec:
      containers:
      - name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_RESOURCE_NAME }}-{{ PIPELINE_RESOURCE_TAG }}
        image: {{ PIPELINE_IMAGE_REGISTRY_URL }}/{{ PIPELINE_IMAGE_REGISTRY_REPO }}/{{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_RESOURCE_NAME }}:{{ PIPELINE_RESOURCE_TAG }}
        resources:
          limits:
            nvidia.com/gpu: 1
        imagePullPolicy: "Never"
        terminationMessagePolicy: "FallbackToLogsOnError"
        env:
        - name: TF_CONFIG
          value: "{\"environment\": \"cloud\", \"cluster\": {\"master\": [\"{{ master_hosts() }}\"], \"worker\": [\"{{ worker_hosts() }}\"], \"ps\": [\"{{ ps_hosts() }}\"]}, \"task\": {\"type\": \"{{ task_type }}\", \"index\": \"{{ task_index }}\"} }"
        - name: PIPELINE_RESOURCE_TASK_TYPE
          value: "{{ task_type }}"
        - name: PIPELINE_RESOURCE_TASK_INDEX
          value: "{{ task_index }}"
        - name: PIPELINE_RESOURCE_MASTER_HOSTS
          value: "{{ master_hosts() }}"
        - name: PIPELINE_RESOURCE_WORKER_HOSTS
          value: "{{ worker_hosts() }}"
        - name: PIPELINE_RESOURCE_PS_HOSTS
          value: "{{ ps_hosts() }}"
        - name: PIPELINE_STREAM_LOGGER_URL
          value: "{{ PIPELINE_STREAM_LOGGER_URL }}"
        - name: PIPELINE_STREAM_LOGGER_TOPIC
          value: "{{ PIPELINE_STREAM_LOGGER_TOPIC }}"
        - name: PIPELINE_STREAM_INPUT_URL
          value: "{{ PIPELINE_STREAM_INPUT_URL }}"
        - name: PIPELINE_STREAM_INPUT_TOPIC
          value: "{{ PIPELINE_STREAM_INPUT_TOPIC }}"
        - name: PIPELINE_STREAM_OUTPUT_URL
          value: "{{ PIPELINE_STREAM_OUTPUT_URL }}"
        - name: PIPELINE_STREAM_OUTPUT_TOPIC
          value: "{{ PIPELINE_STREAM_OUTPUT_TOPIC }}"
        - name: PIPELINE_TRAIN_ARGS
          value: "{{ PIPELINE_TRAIN_ARGS }}"
        ports:
        - containerPort: {{ task_port }}
        - containerPort: {{ admin_port }}
        volumeMounts:
        # Changes to these paths must be sync'd to templates/docker/train-server-local.template and cli_pipeline.py
        - name: input
          mountPath: /opt/ml/input
        - name: output
          mountPath: /opt/ml/output
        - name: pipeline-training-runs-home
          mountPath: /root/pipelineai/training_runs
        - name: cuda
          mountPath: /usr/local/cuda
          readOnly: true
        - name: rootfs-usr-lib
          mountPath: /rootfs/usr/lib
          readOnly: true
      volumes:
        - name: input
          hostPath:
            path: {{ PIPELINE_INPUT_HOST_PATH }}
            type: DirectoryOrCreate
        - name: output
          hostPath:
            path: {{ PIPELINE_OUTPUT_HOST_PATH }}
            type: DirectoryOrCreate
        - name: pipeline-training-runs-home
          hostPath:
            path: {{ PIPELINE_TRAINING_RUNS_HOST_PATH }}
            type: DirectoryOrCreate
        - name: cuda
          hostPath:
            path: /usr/local/cuda
        - name: rootfs-usr-lib
          hostPath:
            path: /usr/lib
---
{% endfor %}
{%- endfor -%}
